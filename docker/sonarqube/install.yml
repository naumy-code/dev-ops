version: "3.2"

services:
  sonarqube: #服务名称
    container_name: sonarqube # 相当于run 的 --name
    image: sonarqube:9.1.0-community
    restart: always
    ports:
      - "9001:9000"
    depends_on:
      - postgres
    networks:
      - sonarnet
    environment:
      - sonar.jdbc.username=sonar
      - sonar.jdbc.password=123456
      - sonar.jdbc.url=jdbc:postgresql://postgres:5432/sonarqube
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=123456
      - SONARQUBE_JDBC_URL=jdbc:postgresql://postgres:5432/sonarqube
    volumes:
      - /home/sonar/sonarqube/extensions:/opt/sonarqube/extensions
      - /home/sonar/sonarqube/logs:/opt/sonarqube/logs
      - /home/sonar/sonarqube/data:/opt/sonarqube/data
      - /home/sonar/sonarqube/conf:/opt/sonarqube/conf

  postgres:
    container_name: postgres # 相当于run 的 --name
    image: postgres:9.6.23
    restart: always
    ports:
      - 5432:5432
    networks:
      - sonarnet
    environment:
      - ES_JAVA_POTS="-Xms128m -Xmx128m"
      - TZ=Asia/Shanghai
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=sonarqube
    volumes:
      - /home/sonar/postgres/postgresql:/var/lib/postgresql
      - /home/sonar/postgres/data:/var/lib/postgresql/data

  potainer:
    container_name: potainer # 相当于run 的 --name
    image: portainer/portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - "8000:8000"
      - "9000:9000"

volumes:
  portainer_data:

networks:
  sonarnet:
    driver: bridge
    external:
      true   #使用外部指定网桥  注意:网桥必须存在
